{"remainingRequest":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\00_WORK\\workspace\\vue_frontend\\src\\views\\plando\\MyPlandoRegi.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\00_WORK\\workspace\\vue_frontend\\src\\views\\plando\\MyPlandoRegi.vue","mtime":1593763958607},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnDQppbXBvcnQgR3JvdXBDb2RlIGZyb20gJy4uLy4uL21peGlucy9Hcm91cENvZGUuanMnDQppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnTXlQbGFuZG9SZWdpJywNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHRoaXNXZWVrOiB7IH0sIC8vIOq4iOyjvCDrgqDsp5wo7Iuc7J6R7J28fuyiheujjOydvCkNCiAgICAgIG5leHRXZWVrOiB7IH0sIC8vIOywqOyjvCDrgqDsp5wo7Iuc7J6R7J28fuyiheujjOydvCkNCiAgICAgIG5leHRXZWVrVGV4dDogJycsIC8vIOywqOyjvCDrgqDsp5wgdGV4dA0KICAgICAgZG9Sb3dzOiBbXSwgLy8g6riI7KO87Iuk7KCBIHJvdyAo7KeE7ZaJ7IKs7ZWt7J2AIGRlZmF1bHTrpbwgMyjrr7jsspjrpqwp7Jy866GcIOyEpOyglSkNCiAgICAgIHBsYW5Sb3dzOiBbXSwgLy8g7LCo7KO86rOE7ZqNIHJvdw0KICAgICAgcHJvY2VlZHM6IFtdLCAvLyDsp4Ttlonsgqztla0gc2VsZWN0IG9wdGlvbg0KICAgICAgZGVwYXJ0bWVudHM6IFtdLCAvLyDrtoDshJzrqoUNCiAgICAgIHNlcmlhbDogMSwgLy8g6riI7KO87Iuk7KCBIHJvdyBrZXkg6rCSDQogICAgICBpc0FjdGl2ZTogZmFsc2UsDQogICAgICByZWRDbGFzczogJ2JvcmRlci1yZWQnLA0KICAgICAgbW9kZTogJycsIC8vIOuTseuhneuqqOuTnOyduOyngCDsiJjsoJXrqqjrk5zsnbjsp4Ag6rWs67aEICjrk7HroZ06ICcnLCDsiJjsoJU6ICdlZGl0JykNCiAgICAgIGRvRW5kTWluOiAnJywgLy8g6riI7KO8IOyiheujjOydvCBtaW4tZGF0ZSDshKTsoJUNCiAgICAgIHBsYW5TdGFydE1pbjogJycsIC8vIOywqOyjvCDsi5zsnpHsnbwgbWluLWRhdGUg7ISk7KCVDQogICAgICBwbGFuU3RhcnRNYXg6ICcnLCAvLyDssKjso7wg7Iuc7J6R7J28IG1heC1kYXRlIOyEpOygleOEtA0KICAgICAgcGxhbkVuZE1pbjogJycgLy8g7LCo7KO8IOyiheujjOydvCBtaW4tZGF0ZSDshKTsoJUNCiAgICB9DQogIH0sDQogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsNCiAgICB0aGlzLnNldHRpbmdEYXRlKG5ldyBEYXRlKCkpDQogICAgdGhpcy5hZGRSb3codGhpcy5kb1Jvd3MsIHRoaXMudGhpc1dlZWspIC8vIOq4iOyjvOyLpOyggSDquLDrs7ggMeykhA0KICAgIHRoaXMuYWRkUm93KHRoaXMucGxhblJvd3MsIHRoaXMubmV4dFdlZWspDQogICAgdGhpcy5nZXREZXBhcnRtZW50SW5mbygpIC8vIOu2gOyEnCDsoJXrs7Qg6rCA7KC47Jik6riwDQogICAgdGhpcy5nZXRQcm9jZWVkRGF0YShHcm91cENvZGUuU1RBVEUpIC8vIOynhO2WieyCrO2VrSBvcHRpb24g6rCA7KC47Jik6riwDQoNCiAgICAvKiDsiJjsoJUg66qo65Oc7J24IOqyveyasCAqLw0KICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5tb2RlID09PSAnZWRpdCcpIHsNCiAgICAgIHRoaXMubW9kZSA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lm1vZGUNCiAgICAgIHRoaXMuaW5pdFBsYW5kbygpDQogICAgfQ0KICB9LA0KICB3YXRjaDogew0KICAgIC8qIOq4iOyjvOydmCDsi5zsnpHsnbwg67OA6rK97J2EIOqwkOyngA0KICAgIOq4iOyjvCDrgqDsp5wg7ISg7YOdIOyLnCwg7IKs7Jqp7J6Q6rCAIOyLnOyekeydvOydhCDslrTrlqQg7JqU7J2866GcIOyEoO2Dne2VmOuToCDrrLTsobDqsbQg7JuU7JqU7J287J20IOyLnOyekeydvOydtCDrkJjrj4TroZ0g7IS47YyFICovDQogICAgJ3RoaXNXZWVrLnN0YXJ0JzogZnVuY3Rpb24gKCkgew0KICAgICAgaWYgKHRoaXMudGhpc1dlZWsuc3RhcnQuZ2V0RGF5KCkgIT09IDEpIHsNCiAgICAgICAgdGhpcy50aGlzV2Vlay5zdGFydC5zZXREYXRlKHRoaXMudGhpc1dlZWsuc3RhcnQuZ2V0RGF0ZSgpIC0gKHRoaXMudGhpc1dlZWsuc3RhcnQuZ2V0RGF5KCkgLSAxKSkNCiAgICAgIH0NCiAgICAgIHRoaXMudGhpc1dlZWsuc3RhcnQuc2V0SG91cnMoMTIpDQoNCiAgICAgIGNvbnN0IGRhdGUgPSB0aGlzLmNhbGN1bGF0aW9uRGF0ZSh0aGlzLnRoaXNXZWVrLnN0YXJ0KQ0KICAgICAgdGhpcy50aGlzV2Vlay5lbmQgPSBkYXRlLndrRW5kDQogICAgICB0aGlzLm5leHRXZWVrLnN0YXJ0ID0gZGF0ZS5ud1N0YXJ0DQogICAgICB0aGlzLm5leHRXZWVrLmVuZCA9IGRhdGUubndFbmQNCiAgICAgIHRoaXMubmV4dFdlZWtUZXh0ID0gZGF0ZS5ud1N0YXJ0VGV4dCArICcgLSAnICsgZGF0ZS5ud0VuZFRleHQNCg0KICAgICAgLy8g7Iuc7J6R7J28LCDsooXro4zsnbwgbWluLWRhdGUg7ISk7KCVDQogICAgICB0aGlzLmRvRW5kTWluID0gdGhpcy50aGlzV2Vlay5zdGFydA0KICAgICAgdGhpcy5wbGFuU3RhcnRNaW4gPSBkYXRlLm53U3RhcnQNCiAgICAgIHRoaXMucGxhblN0YXJ0TWF4ID0gZGF0ZS5ud0VuZA0KICAgICAgdGhpcy5wbGFuRW5kTWluID0gZGF0ZS5ud1N0YXJ0DQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLyog64Kg7KecIOqzhOyCsCAqLw0KICAgIGNhbGN1bGF0aW9uRGF0ZTogZnVuY3Rpb24gKGFuY2hvckRhdGUpIHsNCiAgICAgIGNvbnN0IGN1cnJlbnRXZWVrRGF5ID0gYW5jaG9yRGF0ZS5nZXREYXkoKQ0KICAgICAgY29uc3QgbGVzc0RheXMgPSBjdXJyZW50V2Vla0RheSA9PT0gMCA/IDYgOiBjdXJyZW50V2Vla0RheSAtIDENCiAgICAgIGNvbnN0IHdrU3RhcnQgPSBuZXcgRGF0ZShuZXcgRGF0ZShhbmNob3JEYXRlKS5zZXREYXRlKGFuY2hvckRhdGUuZ2V0RGF0ZSgpIC0gbGVzc0RheXMpKQ0KICAgICAgY29uc3Qgd2tFbmQgPSBuZXcgRGF0ZShuZXcgRGF0ZSh3a1N0YXJ0KS5zZXREYXRlKHdrU3RhcnQuZ2V0RGF0ZSgpICsgNCkpDQogICAgICBjb25zdCBud1N0YXJ0ID0gbmV3IERhdGUobmV3IERhdGUod2tTdGFydCkuc2V0RGF0ZSh3a1N0YXJ0LmdldERhdGUoKSArIDcpKQ0KICAgICAgY29uc3QgbndFbmQgPSBuZXcgRGF0ZShuZXcgRGF0ZShud1N0YXJ0KS5zZXREYXRlKG53U3RhcnQuZ2V0RGF0ZSgpICsgNCkpDQogICAgICBjb25zdCBud1N0YXJ0VGV4dCA9IG53U3RhcnQudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApLnJlcGxhY2UoLy0vZywgJy4nKQ0KICAgICAgY29uc3QgbndFbmRUZXh0ID0gbndFbmQudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApLnJlcGxhY2UoLy0vZywgJy4nKQ0KDQogICAgICByZXR1cm4geyB3a1N0YXJ0OiB3a1N0YXJ0LCB3a0VuZDogd2tFbmQsIG53U3RhcnQ6IG53U3RhcnQsIG53RW5kOiBud0VuZCwgbndTdGFydFRleHQ6IG53U3RhcnRUZXh0LCBud0VuZFRleHQ6IG53RW5kVGV4dCB9DQogICAgfSwNCiAgICBpbml0UGxhbmRvOiBmdW5jdGlvbiAoKSB7DQogICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMuJHJvdXRlLnF1ZXJ5Lmxpc3REYXRhKSB7DQogICAgICAgIHZhbHVlLnNkYXRlID0gbmV3IERhdGUodmFsdWUuc2RhdGUpDQogICAgICAgIHZhbHVlLmVkYXRlID0gbmV3IERhdGUodmFsdWUuZWRhdGUpDQogICAgICB9DQoNCiAgICAgIGNvbnN0IGRvRGF0YSA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lmxpc3REYXRhLmZpbHRlcihmdW5jdGlvbiAoZWwpIHsNCiAgICAgICAgcmV0dXJuIGVsLmd1YnVuID09PSAnMScNCiAgICAgIH0pDQogICAgICBjb25zdCBwbGFuRGF0YSA9IHRoaXMuJHJvdXRlLnF1ZXJ5Lmxpc3REYXRhLmZpbHRlcihmdW5jdGlvbiAoZWwpIHsNCiAgICAgICAgcmV0dXJuIGVsLmd1YnVuID09PSAnMicNCiAgICAgIH0pDQoNCiAgICAgIHRoaXMuZW1wdHlTcGFjZURlbGV0ZSh0aGlzLmRvUm93cykNCiAgICAgIHRoaXMuZW1wdHlTcGFjZURlbGV0ZSh0aGlzLnBsYW5Sb3dzKQ0KDQogICAgICB0aGlzLmRvUm93cy5wdXNoKC4uLmRvRGF0YSkNCiAgICAgIHRoaXMucGxhblJvd3MucHVzaCguLi5wbGFuRGF0YSkNCiAgICAgIHRoaXMuc2V0dGluZ0RhdGUobmV3IERhdGUodGhpcy4kcm91dGUucXVlcnkuc0RhdGUpKQ0KICAgIH0sDQogICAgLyog7Jik64qYIOuCoOynnOulvCDrsJvslYTsmYDshJwg6riI7KO8IOuCoOynnOyZgCDssKjso7wg64Kg7KecIGRlZmF1bHQgc2V0dGluZyAqLw0KICAgIHNldHRpbmdEYXRlOiBmdW5jdGlvbiAoaW5pdERhdGUpIHsNCiAgICAgIHZhciBkYXRlID0gdGhpcy5jYWxjdWxhdGlvbkRhdGUoaW5pdERhdGUpDQogICAgICB0aGlzLnRoaXNXZWVrLnN0YXJ0ID0gZGF0ZS53a1N0YXJ0DQogICAgICB0aGlzLnRoaXNXZWVrLmVuZCA9IGRhdGUud2tFbmQNCiAgICAgIHRoaXMubmV4dFdlZWsuc3RhcnQgPSBkYXRlLm53U3RhcnQNCiAgICAgIHRoaXMubmV4dFdlZWsuZW5kID0gZGF0ZS5ud0VuZA0KICAgICAgdGhpcy5uZXh0V2Vla1RleHQgPSBkYXRlLm53U3RhcnRUZXh0ICsgJyAtICcgKyBkYXRlLm53RW5kVGV4dA0KDQogICAgICAvLyDsi5zsnpHsnbwsIOyiheujjOydvCBtaW4tZGF0ZSDshKTsoJUNCiAgICAgIHRoaXMuZG9FbmRNaW4gPSB0aGlzLnRoaXNXZWVrLnN0YXJ0DQogICAgICB0aGlzLnBsYW5TdGFydE1pbiA9IGRhdGUubndTdGFydA0KICAgICAgdGhpcy5wbGFuU3RhcnRNYXggPSBkYXRlLm53RW5kDQogICAgICB0aGlzLnBsYW5FbmRNaW4gPSBkYXRlLm53U3RhcnQNCiAgICB9LA0KICAgIC8vIEBUT0RPIOuvueyKpOyduOycvOuhnCDrubzquLANCiAgICBnZXRQcm9jZWVkRGF0YTogZnVuY3Rpb24gKGdyb3VwQ29kZSkgew0KICAgICAgYXhpb3MuZ2V0KCcvYXBpL3NlbGVjdENvZGUnLCB7DQogICAgICAgIHBhcmFtczogeyBncm91cENvZGU6IGdyb3VwQ29kZSB9DQogICAgICB9KQ0KICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7DQogICAgICAgICAgICAvLyBEQuyXkOyEnCDsp4Ttlonsgqztla0g7ZWt66qp7J2EIOu2iOufrOyZgOyEnCBwdXNoDQogICAgICAgICAgICB0aGlzLnByb2NlZWRzLnB1c2goLi4ucmVzcG9uc2UuZGF0YS5kYXRhKQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKGVycm9yID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikNCiAgICAgICAgfSkNCiAgICB9LA0KICAgIC8qIOyLpOyggSDrsI8g6rOE7ZqNIHJvdyDstpTqsIAgKi8NCiAgICBhZGRSb3c6IGZ1bmN0aW9uIChyb3csIGRhdGUpIHsNCiAgICAgIHRoaXMuc2VyaWFsID0gdGhpcy5zZXJpYWwgKyAxDQogICAgICByb3cucHVzaCh7IHNlcmlhbDogdGhpcy5zZXJpYWwsIGd1YnVuOiAnMScsIGNvbnRlbnQ6ICcnLCBzZGF0ZTogZGF0ZS5zdGFydCwgZWRhdGU6IGRhdGUuZW5kLCBwcm9jZWVkOiAnMycgfSkNCiAgICB9LA0KICAgIC8qIOyLpOyggSDrsI8g6rOE7ZqNIHJvdyDsgq3soJwgKi8NCiAgICByZW1vdmVSb3c6IGZ1bmN0aW9uIChyb3dzLCByb3cpIHsNCiAgICAgIHJvd3Muc3BsaWNlKHJvdywgMSkNCiAgICB9LA0KICAgIC8qIOyghOyjvOqzhO2ajSDrs7XsgqwgKi8NCiAgICBjb3B5UGxhbjogZnVuY3Rpb24gKCkgew0KICAgICAgY29uc3Qgc0RhdGUgPSB0aGlzLmRhdGVUb1N0cmluZyhuZXcgRGF0ZShuZXcgRGF0ZSh0aGlzLnRoaXNXZWVrLnN0YXJ0KS5zZXREYXRlKHRoaXMudGhpc1dlZWsuc3RhcnQuZ2V0RGF0ZSgpKSkpDQogICAgICBheGlvcy5nZXQoJy9hcGkvZ2V0TGFzdFdlZWtQbGFuQ29weScsIHsNCiAgICAgICAgcGFyYW1zOiB7IGd1YnVuOiAnMicsIHNEYXRlOiBzRGF0ZSB9DQogICAgICB9KQ0KICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7DQogICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5kYXRhLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICBhbGVydCgn67O17IKs7ZWgIOyghOyjvCDqs4Ttmo3snbQg7JeG7Iq164uI64ukJykNCiAgICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmVtcHR5U3BhY2VEZWxldGUodGhpcy5kb1Jvd3MpIC8vIOu5iOy5uCDsgq3soJwNCiAgICAgICAgICAgIC8vIFN0cmluZyAtPiBkYXRlIO2YleyLneycvOuhnCDrs4Dqsr0NCiAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgcmVzcG9uc2UuZGF0YS5kYXRhKSB7DQogICAgICAgICAgICAgIHZhbHVlLnNkYXRlID0gbmV3IERhdGUodmFsdWUuc2RhdGUpDQogICAgICAgICAgICAgIHZhbHVlLmVkYXRlID0gbmV3IERhdGUodmFsdWUuZWRhdGUpDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMuZG9Sb3dzLnB1c2goLi4ucmVzcG9uc2UuZGF0YS5kYXRhKSAvLyBzcHJlYWQgb3BlcmF0b3LroZwg67Cw7Je0IO2VnOq6vOuyiOyXkCDstpzroKUg6rCA64qlDQogICAgICAgICAgfQ0KICAgICAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikNCiAgICAgICAgfSkNCiAgICB9LA0KICAgIC8qIOyghOyjvCDqs4Ttmo0g67O17IKsIOyLnCwg7Iuk7KCB7J20IOu5hOyWtOyeiOuKlCDsubjsnYAg7IKt7KCcICovDQogICAgZW1wdHlTcGFjZURlbGV0ZTogZnVuY3Rpb24gKHJvdykgew0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3cubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgaWYgKCFyb3dbaV0uY29udGVudCkgeyAvLyBudWxsLCB1bmRlZmllZCAuLi4g7LK07YGsDQogICAgICAgICAgcm93LnNwbGljZShpLCAxKQ0KICAgICAgICAgIGktLQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICAvKiDrgqDsp5woMjAyMOuFhCA27JuUIDEy7J28KeulvCDtgbTrpq3snLzroZwg7KeB7KCRIOyEoO2Dne2VnCDqsr3smrAgMjAyMOuFhCA27JuUIDEy7J28IDDsi5wgMOu2hCAw7LSI6rCAIOy2nOugpeuQmOqzoCwNCiAgICAgICAgRELsoIDsnqXsi5wgMjAyMOuFhCA27JuUIDEx7J2866GcIOyggOyepeuQmOuKlCDrrLjsoJwg67Cc7IOdDQogICAgICAgIOuUsOudvOyEnCDsi5ws67aELOy0iOulvCDrjZTtlZwg6rCS7J20IDDsnbTrqbQg64Kg7Kec66W8IOuLpOyLnCDshLjtjIXtlZzri6QgKi8NCiAgICBjaGVja0RhdGU6IGZ1bmN0aW9uIChkYXRlKSB7DQogICAgICBkYXRlLnNldEhvdXJzKDEyKQ0KICAgICAgcmV0dXJuIGRhdGUNCiAgICB9LA0KICAgIC8qIOyggOyepSDsi5wgVmFsaWRhdGlvbiBDaGVjayAqLw0KICAgIHNhdmVWYWxpZGF0aW9uOiBmdW5jdGlvbiAoKSB7DQogICAgICBpZiAodGhpcy5tb2RlICE9PSAnZWRpdCcpIHsNCiAgICAgICAgaWYgKCF0aGlzLmlzTnVsbENvbnRlbnQoKSkgew0KICAgICAgICAvLyBAVE9ETzog66mU7Iuc7KeAIOuCtOyaqSDrs4Dqsr0NCiAgICAgICAgICBhbGVydCgn6riI7KO8IOyLpOyggeqzvCDssKjso7wg6rOE7ZqN7J20IOuqqOuRkCDruYTslrTsnojsirXri4jri6Rcclxu7JeF66y0IOyLpOyggeydhCDsnoXroKXtlbTso7zshLjsmpQnKQ0KICAgICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIGlmICghdGhpcy52YWxpZGF0aW9uU3RhcnRFbmQoKSkgew0KICAgICAgICBhbGVydCgn7KKF66OM7J287J20IOyLnOyekeydvOuztOuLpCDsnbTsoIQg64Kg7Kec7J28IOyImCDsl4bsirXri4jri6QnKQ0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0NCg0KICAgICAgcmV0dXJuIHRydWUNCiAgICB9LA0KICAgIC8qIOqzhO2ajSDrsI8g7Iuk7KCBIOyggOyepSAqLw0KICAgIHNhdmVQbGFuZG86IGZ1bmN0aW9uICgpIHsNCiAgICAgIGlmICghdGhpcy5zYXZlVmFsaWRhdGlvbigpKSB7DQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgdGhpcy5jb252ZXJ0RGF0YSh0aGlzLmRvUm93cywgJ2RhdGUnLCAxKQ0KICAgICAgdGhpcy5jb252ZXJ0RGF0YSh0aGlzLnBsYW5Sb3dzLCAnZGF0ZScsIDIpDQoNCiAgICAgIGNvbnN0IHBsYW5kb1BPTGlzdCA9ICh0aGlzLmRvUm93cykuY29uY2F0KHRoaXMucGxhblJvd3MpDQogICAgICBjb25zdCBlZGl0U0RhdGUgPSB0aGlzLmRhdGVUb1N0cmluZyhuZXcgRGF0ZShuZXcgRGF0ZSh0aGlzLnRoaXNXZWVrLnN0YXJ0KS5zZXREYXRlKHRoaXMudGhpc1dlZWsuc3RhcnQuZ2V0RGF0ZSgpKSkpDQoNCiAgICAgIGF4aW9zDQogICAgICAgIC5wb3N0KCcvYXBpL3NhdmVQbGFuZG8nLA0KICAgICAgICAgIHsgcGxhbmRvUE9MaXN0OiBwbGFuZG9QT0xpc3QsIG1vZGU6IHRoaXMubW9kZSwgZWRpdFNEYXRlOiBlZGl0U0RhdGUgfQ0KICAgICAgICApDQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gew0KICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN1Y2Nlc3MpIHsNCiAgICAgICAgICAgIGFsZXJ0KHJlc3BvbnNlLmRhdGEubWVzc2FnZSkNCiAgICAgICAgICAgIC8vIEBUT0RPOiBwYXJhbWV0ZXIg64SY6riw64qUIOuLpOuluCDrsKnrspUg6rOg66+8DQogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh0aGlzLiRyb3V0ZS5xdWVyeS5yZWRpcmVjdCB8fCAnL3BsYW5kby92aWV3P3RoaXNXZWVrPScgKyB0aGlzLnRoaXNXZWVrLnN0YXJ0KQ0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBhbGVydChyZXNwb25zZS5kYXRhLm1lc3NhZ2UpDQogICAgICAgICAgICB0aGlzLmNvbnZlcnREYXRhKHRoaXMuZG9Sb3dzLCAnc3RyaW5nJykNCiAgICAgICAgICAgIHRoaXMuY29udmVydERhdGEodGhpcy5wbGFuUm93cywgJ3N0cmluZycpDQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpDQogICAgICAgIH0pDQogICAgfSwNCiAgICAvKiDsi6TsoIEg7KCA7J6lIOyghCBvciDsi6TsoIEg7KCA7J6lIO2bhCBkYXRhIHR5cGUg67OA6rK9DQogICAgcm93czog7J6F66ClIOqwkg0KICAgIHR5cGU6ICdkYXRlJz1kYXRlVG9TdHJpbmcgLyAnc3RyaW5nJz1zdHJpbmdUb0RhdGUNCiAgICBndWJ1bjogMT3si6TsoIEgLyAyPeqzhO2ajQ0KICAgICAqLw0KICAgIGNvbnZlcnREYXRhOiBmdW5jdGlvbiAocm93cywgdHlwZSwgZ3VidW4pIHsNCiAgICAgIGlmICh0eXBlID09PSAnZGF0ZScpIHsNCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3dzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgcm93c1tpXS5zZGF0ZSA9IHRoaXMuZGF0ZVRvU3RyaW5nKHRoaXMuY2hlY2tEYXRlKHJvd3NbaV0uc2RhdGUpKQ0KICAgICAgICAgIHJvd3NbaV0uZWRhdGUgPSB0aGlzLmRhdGVUb1N0cmluZyh0aGlzLmNoZWNrRGF0ZShyb3dzW2ldLmVkYXRlKSkNCiAgICAgICAgICByb3dzW2ldLmd1YnVuID0gZ3VidW4NCiAgICAgICAgfQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3dzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgcm93c1tpXS5zZGF0ZSA9IHRoaXMuc3RyaW5nVG9EYXRlKHJvd3NbaV0uc2RhdGUpDQogICAgICAgICAgcm93c1tpXS5lZGF0ZSA9IHRoaXMuc3RyaW5nVG9EYXRlKHJvd3NbaV0uZWRhdGUpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIC8qIOyXheustCDsi6TsoIEg65Ox66GdL+yImOyglSDsi5wg6riI7KO8IOyLpOyggeqzvCDssKjso7wg6rOE7ZqN7J20IOuqqOuRkCDruYTslrTsnojripTsp4Ag7ZmV7J24DQogICAg66qo65GQIOu5hOyWtOyeiOuKlCDqsr3smrAg6rCS7J2EIOyeheugpe2VmOudvOuKlCDrqZTsi5zsp4DssL3snYQg652E7JuM7KSA64ukICovDQogICAgaXNOdWxsQ29udGVudDogZnVuY3Rpb24gKCkgew0KICAgICAgY29uc3QgZG9Db250ZW50ID0gdGhpcy5kb1Jvd3MuZmlsdGVyKGZ1bmN0aW9uIChlbCkgew0KICAgICAgICByZXR1cm4gZWwuY29udGVudC5yZXBsYWNlKC8gL2csICcnKS5yZXBsYWNlKC8oPzpcclxufFxyfFxuKS9nLCAnJykgLy8g652E7Ja07JOw6riwIG9yIOyXlO2EsOunjCDtlZjqs6Ag7KCA7J6l7ZWY64qUIOqyveyasOuPhCDruYTslrTsnojripQg6rKD7Jy866GcIOqwhOyjvA0KICAgICAgfSkNCiAgICAgIGNvbnN0IHBsYW5Db250ZW50ID0gdGhpcy5wbGFuUm93cy5maWx0ZXIoZnVuY3Rpb24gKGVsKSB7DQogICAgICAgIHJldHVybiBlbC5jb250ZW50LnJlcGxhY2UoLyAvZywgJycpLnJlcGxhY2UoLyg/OlxyXG58XHJ8XG4pL2csICcnKQ0KICAgICAgfSkNCg0KICAgICAgaWYgKGRvQ29udGVudC5sZW5ndGggKyBwbGFuQ29udGVudC5sZW5ndGggPT09IDApIHsNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gdHJ1ZQ0KICAgICAgfQ0KICAgIH0sDQogICAgLyog67aA7IScIOygleuztCDqsIDsoLjsmKTquLAgKi8NCiAgICBnZXREZXBhcnRtZW50SW5mbzogZnVuY3Rpb24gKCkgew0KICAgICAgYXhpb3MuZ2V0KCcvYXBpL2dldERlcGFydG1lbnRJbmZvJywgew0KICAgICAgICBwYXJhbXM6IHsgZ3Jjb2RlOiBHcm91cENvZGUuREVQQVJUTUVOVCB9DQogICAgICB9KQ0KICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7DQogICAgICAgICAgICB0aGlzLmRlcGFydG1lbnRzLnB1c2goLi4ucmVzcG9uc2UuZGF0YS5kYXRhKQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpDQogICAgICAgIH0pDQogICAgfSwNCiAgICB2YWxpZGF0aW9uU3RhcnRFbmQ6IGZ1bmN0aW9uICgpIHsNCiAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5kb1Jvd3MpIHsNCiAgICAgICAgaWYgKHRoaXMuY2hlY2tEYXRlKHZhbHVlLnNkYXRlKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCkgPiB0aGlzLmNoZWNrRGF0ZSh2YWx1ZS5lZGF0ZSkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApKSB7DQogICAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICAgIH0NCiAgICAgIH0NCg0KICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLnBsYW5Sb3dzKSB7DQogICAgICAgIGlmICh0aGlzLmNoZWNrRGF0ZSh2YWx1ZS5zZGF0ZSkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApID4gdGhpcy5jaGVja0RhdGUodmFsdWUuZWRhdGUpLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDAsIDEwKSkgew0KICAgICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgICB9DQogICAgICB9DQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0sDQogICAgLyogRGF0ZSDtmJXsi50gLT4gU3RyaW5nIO2YleyLneycvOuhnCDrs4DtmZggKi8NCiAgICBkYXRlVG9TdHJpbmc6IGZ1bmN0aW9uIChkYXRlKSB7DQogICAgICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCkucmVwbGFjZSgvLS9nLCAnJykgLy8g7KCV6rec7Iud7J2EIOydtOyaqe2VmOyXrCByZXBsYWNlQWxsIOyymOumrCDsgqzsmqkNCiAgICB9LA0KICAgIC8qIFN0cmluZ+2YleyLnSAtPiBEYXRl7ZiV7Iud7Jy866GcIOuzgO2ZmCAqLw0KICAgIHN0cmluZ1RvRGF0ZTogZnVuY3Rpb24gKGRhdGUpIHsNCiAgICAgIHJldHVybiBuZXcgRGF0ZShtb21lbnQoZGF0ZSkuZm9ybWF0KCdZWVlZLU1NLUREJykpDQogICAgfSwNCiAgICAvKiDquIDsnpDsiJgg7LK07YGsIGV2ZW50ICovDQogICAgb25LZXlEb3duOiBmdW5jdGlvbiAoZSkgew0KICAgICAgaWYgKGUudGFyZ2V0LnRleHRMZW5ndGggPiAxMDAwKSB7DQogICAgICAgIGFsZXJ0KCfquIDsnpDsiJjrpbwgMTAwMOyekCDsnbTtlZjroZwg7J6F66Cl7ZW07KO87IS47JqULicpDQogICAgICB9DQogICAgfSwNCiAgICBlbnRlckV2ZW50OiBmdW5jdGlvbiAoZSkgew0KICAgICAgLy8gYWxlcnQoJyEhIScpDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["MyPlandoRegi.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"MyPlandoRegi.vue","sourceRoot":"src/views/plando","sourcesContent":["<template>\r\n  <div class=\"conts-area\" @keydown=\"enterEvent($event)\">\r\n    <div class=\"conts-tit\">\r\n      <h2>업무실적 등록/수정</h2>\r\n    </div>\r\n    <div class=\"list-top-area\">\r\n      <div class=\"fl\">\r\n        <label for=\"s1\">부서명</label>\r\n        <select id=\"s1\" title=\"select\" disabled>\r\n          <option v-for=\"department in departments\" v-bind:key=\"department.scode\" v-bind:value=\"department.scode\" v-bind:selected=\"department.myDept==='Y'\">{{ department.scodeNm }}</option>\r\n        </select>\r\n      </div>\r\n      <p class=\"d-in fl mt5 mg10\">금주</p>\r\n      <div class=\"fl wp25\">\r\n        <div class=\"vcal-area\">\r\n          <v-date-picker\r\n            mode='range'\r\n            v-model='thisWeek'\r\n            :disabled-dates='{ weekdays: [1, 7] }'\r\n            :popover=\"{ placement: 'bottom', visibility: 'click' }\">\r\n          </v-date-picker>\r\n        </div>\r\n      </div>\r\n      <p class=\"d-in fl mt5 mg10\">차주</p>\r\n      <div class=\"fl wp25\">\r\n          <input type=\"text\" v-model=\"nextWeekText\" readonly>\r\n      </div>\r\n    </div>\r\n    <div class=\"clearfix mt20\">\r\n      <div class=\"d-ib fl\">\r\n        <button type=\"button\" title=\"금주실적 추가\" class=\"btn btn-gray\" @click=\"addRow(doRows, thisWeek)\">금주실적 추가</button>\r\n        <button type=\"button\" title=\"결재상신\" class=\"btn btn-black\" @click=\"copyPlan()\">전주계획 복사</button>\r\n      </div>\r\n      <div class=\"t-right\">\r\n        <button type=\"button\" title=\"저장\" class=\"btn btn-blue\" @click=\"savePlando()\">저장</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"tbl-area\">\r\n      <input type=\"hidden\" v-model=\"mode\">\r\n      <!-- <MyDoRegi/>\r\n      <MyPlanRegi/> -->\r\n      <div>\r\n    <!-- 금주실적 start -->\r\n      <table class=\"tbl\">\r\n        <caption>리스트</caption>\r\n        <colgroup>\r\n          <col style=\"width:50%\">\r\n          <col style=\"width:14%\">\r\n          <col style=\"width:14%\">\r\n          <col style=\"width:12%\">\r\n          <col style=\"width:10%\">\r\n        </colgroup>\r\n        <thead>\r\n          <tr>\r\n            <th colspan=\"5\">금주실적</th>\r\n          </tr>\r\n          <tr>\r\n            <th>실적</th>\r\n            <th>시작일</th>\r\n            <th>종료일</th>\r\n            <th>계획</th>\r\n            <th>삭제</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n          </tr>\r\n          <tr v-for=\"(doValue, doRow) in doRows\" v-bind:key=\"doValue.serial\">\r\n            <td class=\"t-left\">\r\n              <textarea id=\"ta1\" name=\"ta1\" rows=\"5\" v-model=\"doValue.content\" :maxlength=\"1000\" @keydown=\"onKeyDown($event)\"></textarea>\r\n            </td>\r\n            <td>\r\n              <!-- calendar start -->\r\n              <div class=\"vcal-area\">\r\n                <v-date-picker\r\n                  v-model=\"doValue.sdate\"\r\n                  :disabled-dates='{ weekdays: [1, 7] }'\r\n                  :popover=\"{ placement: 'bottom', visibility: 'click' }\"\r\n                  :masks=\"{ input: 'MM/DD'}\"\r\n                  :min-date=\"thisWeek.start\"\r\n                  :max-date=\"thisWeek.end\">\r\n                </v-date-picker>\r\n              </div>\r\n              <!-- //calendar end -->\r\n            </td>\r\n            <td>\r\n              <!-- calendar start -->\r\n              <div class=\"vcal-area\">\r\n                <v-date-picker\r\n                  v-model=\"doValue.edate\"\r\n                  :disabled-dates='{ weekdays: [1, 7] }'\r\n                  :popover=\"{ placement: 'bottom', visibility: 'click' }\"\r\n                  :masks=\"{ input: 'MM/DD'}\"\r\n                  :min-date=\"doEndMin\">\r\n                </v-date-picker>\r\n              </div>\r\n              <!-- //calendar end -->\r\n            </td>\r\n            <td>\r\n              <label for=\"s1\" class=\"blind\">진행사항</label>\r\n              <select id=\"s2\" title=\"select\" v-model=\"doValue.proceed\" class=\"inner-select\">\r\n                <option v-for=\"proceed in proceeds\" v-bind:key=\"proceed.scode\" v-bind:value=\"proceed.scode\">{{ proceed.scodeNm }}</option>\r\n              </select>\r\n            </td>\r\n            <td><button type=\"button\" title=\"삭제\" class=\"btn btn-black\" @click=\"removeRow(doRows, doRow)\">삭제</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <!-- //금주실적 end -->\r\n      <div class=\"clearfix mt40\">\r\n        <div>\r\n          <button type=\"button\" title=\"차주계획 추가\" class=\"btn btn-gray\" @click=\"addRow(planRows, nextWeek)\">차주계획 추가</button>\r\n        </div>\r\n      </div>\r\n      <!-- 차주계획 start -->\r\n      <table class=\"tbl mt10\">\r\n        <caption>리스트</caption>\r\n        <colgroup>\r\n          <col style=\"width:50%\">\r\n          <col style=\"width:10%\">\r\n          <col style=\"width:10%\">\r\n          <col style=\"width:20%\">\r\n          <col style=\"width:10%\">\r\n        </colgroup>\r\n        <thead>\r\n          <tr>\r\n            <th colspan=\"5\">차주계획</th>\r\n          </tr>\r\n          <tr>\r\n            <th>실적</th>\r\n            <th>시작일</th>\r\n            <th>종료일</th>\r\n            <th>비고</th>\r\n            <th>삭제</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n          </tr>\r\n          <tr v-for=\"(plan, planRow) in planRows\" v-bind:key=\"plan.serial\">\r\n            <td class=\"t-left\">\r\n              <textarea id=\"ta2\" name=\"ta2\" rows=\"5\" v-model=\"plan.content\" :maxlength=\"1000\" @keydown=\"onKeyDown($event)\"></textarea>\r\n            </td>\r\n            <td>\r\n              <!-- calendar start -->\r\n              <div class=\"vcal-area t2\">\r\n                <v-date-picker\r\n                  v-model='plan.sdate'\r\n                  :disabled-dates='{ weekdays: [1, 7] }'\r\n                  :popover=\"{ placement: 'bottom', visibility: 'click' }\"\r\n                  :masks=\"{ input: 'MM/DD'}\"\r\n                  :min-date=\"planStartMin\"\r\n                  :max-date=\"planStartMax\"\r\n                  :class=\"[ isActive ? redClass: '' ]\">\r\n                </v-date-picker>\r\n              </div>\r\n              <!-- //calendar end -->\r\n            </td>\r\n            <td>\r\n              <!-- calendar start -->\r\n              <div class=\"vcal-area t2\">\r\n                <v-date-picker\r\n                  v-model='plan.edate'\r\n                  :disabled-dates='{ weekdays: [1, 7] }'\r\n                  :popover=\"{ placement: 'bottom', visibility: 'click' }\"\r\n                  :masks=\"{ input: 'MM/DD'}\"\r\n                  :min-date=\"planEndMin\">\r\n                </v-date-picker>\r\n              </div>\r\n              <!-- //calendar end -->\r\n            </td>\r\n            <td>\r\n              <textarea id=\"ta2\" name=\"ta2\" rows=\"3\" v-model=\"plan.bigo\"></textarea>\r\n            </td>\r\n            <td><button type=\"button\" title=\"결재상신\" class=\"btn btn-black\" @click=\"removeRow(planRows, planRow)\">삭제</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <!-- //차주계획 end -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport GroupCode from '../../mixins/GroupCode.js'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'MyPlandoRegi',\r\n  data () {\r\n    return {\r\n      thisWeek: { }, // 금주 날짜(시작일~종료일)\r\n      nextWeek: { }, // 차주 날짜(시작일~종료일)\r\n      nextWeekText: '', // 차주 날짜 text\r\n      doRows: [], // 금주실적 row (진행사항은 default를 3(미처리)으로 설정)\r\n      planRows: [], // 차주계획 row\r\n      proceeds: [], // 진행사항 select option\r\n      departments: [], // 부서명\r\n      serial: 1, // 금주실적 row key 값\r\n      isActive: false,\r\n      redClass: 'border-red',\r\n      mode: '', // 등록모드인지 수정모드인지 구분 (등록: '', 수정: 'edit')\r\n      doEndMin: '', // 금주 종료일 min-date 설정\r\n      planStartMin: '', // 차주 시작일 min-date 설정\r\n      planStartMax: '', // 차주 시작일 max-date 설정ㄴ\r\n      planEndMin: '' // 차주 종료일 min-date 설정\r\n    }\r\n  },\r\n  created: function () {\r\n    this.settingDate(new Date())\r\n    this.addRow(this.doRows, this.thisWeek) // 금주실적 기본 1줄\r\n    this.addRow(this.planRows, this.nextWeek)\r\n    this.getDepartmentInfo() // 부서 정보 가져오기\r\n    this.getProceedData(GroupCode.STATE) // 진행사항 option 가져오기\r\n\r\n    /* 수정 모드인 경우 */\r\n    if (this.$route.query.mode === 'edit') {\r\n      this.mode = this.$route.query.mode\r\n      this.initPlando()\r\n    }\r\n  },\r\n  watch: {\r\n    /* 금주의 시작일 변경을 감지\r\n    금주 날짜 선택 시, 사용자가 시작일을 어떤 요일로 선택하든 무조건 월요일이 시작일이 되도록 세팅 */\r\n    'thisWeek.start': function () {\r\n      if (this.thisWeek.start.getDay() !== 1) {\r\n        this.thisWeek.start.setDate(this.thisWeek.start.getDate() - (this.thisWeek.start.getDay() - 1))\r\n      }\r\n      this.thisWeek.start.setHours(12)\r\n\r\n      const date = this.calculationDate(this.thisWeek.start)\r\n      this.thisWeek.end = date.wkEnd\r\n      this.nextWeek.start = date.nwStart\r\n      this.nextWeek.end = date.nwEnd\r\n      this.nextWeekText = date.nwStartText + ' - ' + date.nwEndText\r\n\r\n      // 시작일, 종료일 min-date 설정\r\n      this.doEndMin = this.thisWeek.start\r\n      this.planStartMin = date.nwStart\r\n      this.planStartMax = date.nwEnd\r\n      this.planEndMin = date.nwStart\r\n    }\r\n  },\r\n  methods: {\r\n    /* 날짜 계산 */\r\n    calculationDate: function (anchorDate) {\r\n      const currentWeekDay = anchorDate.getDay()\r\n      const lessDays = currentWeekDay === 0 ? 6 : currentWeekDay - 1\r\n      const wkStart = new Date(new Date(anchorDate).setDate(anchorDate.getDate() - lessDays))\r\n      const wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 4))\r\n      const nwStart = new Date(new Date(wkStart).setDate(wkStart.getDate() + 7))\r\n      const nwEnd = new Date(new Date(nwStart).setDate(nwStart.getDate() + 4))\r\n      const nwStartText = nwStart.toISOString().substr(0, 10).replace(/-/g, '.')\r\n      const nwEndText = nwEnd.toISOString().substr(0, 10).replace(/-/g, '.')\r\n\r\n      return { wkStart: wkStart, wkEnd: wkEnd, nwStart: nwStart, nwEnd: nwEnd, nwStartText: nwStartText, nwEndText: nwEndText }\r\n    },\r\n    initPlando: function () {\r\n      for (const value of this.$route.query.listData) {\r\n        value.sdate = new Date(value.sdate)\r\n        value.edate = new Date(value.edate)\r\n      }\r\n\r\n      const doData = this.$route.query.listData.filter(function (el) {\r\n        return el.gubun === '1'\r\n      })\r\n      const planData = this.$route.query.listData.filter(function (el) {\r\n        return el.gubun === '2'\r\n      })\r\n\r\n      this.emptySpaceDelete(this.doRows)\r\n      this.emptySpaceDelete(this.planRows)\r\n\r\n      this.doRows.push(...doData)\r\n      this.planRows.push(...planData)\r\n      this.settingDate(new Date(this.$route.query.sDate))\r\n    },\r\n    /* 오늘 날짜를 받아와서 금주 날짜와 차주 날짜 default setting */\r\n    settingDate: function (initDate) {\r\n      var date = this.calculationDate(initDate)\r\n      this.thisWeek.start = date.wkStart\r\n      this.thisWeek.end = date.wkEnd\r\n      this.nextWeek.start = date.nwStart\r\n      this.nextWeek.end = date.nwEnd\r\n      this.nextWeekText = date.nwStartText + ' - ' + date.nwEndText\r\n\r\n      // 시작일, 종료일 min-date 설정\r\n      this.doEndMin = this.thisWeek.start\r\n      this.planStartMin = date.nwStart\r\n      this.planStartMax = date.nwEnd\r\n      this.planEndMin = date.nwStart\r\n    },\r\n    // @TODO 믹스인으로 빼기\r\n    getProceedData: function (groupCode) {\r\n      axios.get('/api/selectCode', {\r\n        params: { groupCode: groupCode }\r\n      })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            // DB에서 진행사항 항목을 불러와서 push\r\n            this.proceeds.push(...response.data.data)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    /* 실적 및 계획 row 추가 */\r\n    addRow: function (row, date) {\r\n      this.serial = this.serial + 1\r\n      row.push({ serial: this.serial, gubun: '1', content: '', sdate: date.start, edate: date.end, proceed: '3' })\r\n    },\r\n    /* 실적 및 계획 row 삭제 */\r\n    removeRow: function (rows, row) {\r\n      rows.splice(row, 1)\r\n    },\r\n    /* 전주계획 복사 */\r\n    copyPlan: function () {\r\n      const sDate = this.dateToString(new Date(new Date(this.thisWeek.start).setDate(this.thisWeek.start.getDate())))\r\n      axios.get('/api/getLastWeekPlanCopy', {\r\n        params: { gubun: '2', sDate: sDate }\r\n      })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            if (response.data.data.length === 0) {\r\n              alert('복사할 전주 계획이 없습니다')\r\n              return\r\n            }\r\n            this.emptySpaceDelete(this.doRows) // 빈칸 삭제\r\n            // String -> date 형식으로 변경\r\n            for (const value of response.data.data) {\r\n              value.sdate = new Date(value.sdate)\r\n              value.edate = new Date(value.edate)\r\n            }\r\n\r\n            this.doRows.push(...response.data.data) // spread operator로 배열 한꺼번에 출력 가능\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    /* 전주 계획 복사 시, 실적이 비어있는 칸은 삭제 */\r\n    emptySpaceDelete: function (row) {\r\n      for (let i = 0; i < row.length; i++) {\r\n        if (!row[i].content) { // null, undefied ... 체크\r\n          row.splice(i, 1)\r\n          i--\r\n        }\r\n      }\r\n    },\r\n    /* 날짜(2020년 6월 12일)를 클릭으로 직접 선택한 경우 2020년 6월 12일 0시 0분 0초가 출력되고,\r\n        DB저장시 2020년 6월 11일로 저장되는 문제 발생\r\n        따라서 시,분,초를 더한 값이 0이면 날짜를 다시 세팅한다 */\r\n    checkDate: function (date) {\r\n      date.setHours(12)\r\n      return date\r\n    },\r\n    /* 저장 시 Validation Check */\r\n    saveValidation: function () {\r\n      if (this.mode !== 'edit') {\r\n        if (!this.isNullContent()) {\r\n        // @TODO: 메시지 내용 변경\r\n          alert('금주 실적과 차주 계획이 모두 비어있습니다\\r\\n업무 실적을 입력해주세요')\r\n          return false\r\n        }\r\n      }\r\n\r\n      if (!this.validationStartEnd()) {\r\n        alert('종료일이 시작일보다 이전 날짜일 수 없습니다')\r\n        return false\r\n      }\r\n\r\n      return true\r\n    },\r\n    /* 계획 및 실적 저장 */\r\n    savePlando: function () {\r\n      if (!this.saveValidation()) {\r\n        return\r\n      }\r\n      this.convertData(this.doRows, 'date', 1)\r\n      this.convertData(this.planRows, 'date', 2)\r\n\r\n      const plandoPOList = (this.doRows).concat(this.planRows)\r\n      const editSDate = this.dateToString(new Date(new Date(this.thisWeek.start).setDate(this.thisWeek.start.getDate())))\r\n\r\n      axios\r\n        .post('/api/savePlando',\r\n          { plandoPOList: plandoPOList, mode: this.mode, editSDate: editSDate }\r\n        )\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            alert(response.data.message)\r\n            // @TODO: parameter 넘기는 다른 방법 고민\r\n            this.$router.replace(this.$route.query.redirect || '/plando/view?thisWeek=' + this.thisWeek.start)\r\n          } else {\r\n            alert(response.data.message)\r\n            this.convertData(this.doRows, 'string')\r\n            this.convertData(this.planRows, 'string')\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    /* 실적 저장 전 or 실적 저장 후 data type 변경\r\n    rows: 입력 값\r\n    type: 'date'=dateToString / 'string'=stringToDate\r\n    gubun: 1=실적 / 2=계획\r\n     */\r\n    convertData: function (rows, type, gubun) {\r\n      if (type === 'date') {\r\n        for (let i = 0; i < rows.length; i++) {\r\n          rows[i].sdate = this.dateToString(this.checkDate(rows[i].sdate))\r\n          rows[i].edate = this.dateToString(this.checkDate(rows[i].edate))\r\n          rows[i].gubun = gubun\r\n        }\r\n      } else {\r\n        for (let i = 0; i < rows.length; i++) {\r\n          rows[i].sdate = this.stringToDate(rows[i].sdate)\r\n          rows[i].edate = this.stringToDate(rows[i].edate)\r\n        }\r\n      }\r\n    },\r\n    /* 업무 실적 등록/수정 시 금주 실적과 차주 계획이 모두 비어있는지 확인\r\n    모두 비어있는 경우 값을 입력하라는 메시지창을 띄워준다 */\r\n    isNullContent: function () {\r\n      const doContent = this.doRows.filter(function (el) {\r\n        return el.content.replace(/ /g, '').replace(/(?:\\r\\n|\\r|\\n)/g, '') // 띄어쓰기 or 엔터만 하고 저장하는 경우도 비어있는 것으로 간주\r\n      })\r\n      const planContent = this.planRows.filter(function (el) {\r\n        return el.content.replace(/ /g, '').replace(/(?:\\r\\n|\\r|\\n)/g, '')\r\n      })\r\n\r\n      if (doContent.length + planContent.length === 0) {\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    /* 부서 정보 가져오기 */\r\n    getDepartmentInfo: function () {\r\n      axios.get('/api/getDepartmentInfo', {\r\n        params: { grcode: GroupCode.DEPARTMENT }\r\n      })\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            this.departments.push(...response.data.data)\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    validationStartEnd: function () {\r\n      for (const value of this.doRows) {\r\n        if (this.checkDate(value.sdate).toISOString().substr(0, 10) > this.checkDate(value.edate).toISOString().substr(0, 10)) {\r\n          return false\r\n        }\r\n      }\r\n\r\n      for (const value of this.planRows) {\r\n        if (this.checkDate(value.sdate).toISOString().substr(0, 10) > this.checkDate(value.edate).toISOString().substr(0, 10)) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    /* Date 형식 -> String 형식으로 변환 */\r\n    dateToString: function (date) {\r\n      return date.toISOString().substr(0, 10).replace(/-/g, '') // 정규식을 이용하여 replaceAll 처리 사용\r\n    },\r\n    /* String형식 -> Date형식으로 변환 */\r\n    stringToDate: function (date) {\r\n      return new Date(moment(date).format('YYYY-MM-DD'))\r\n    },\r\n    /* 글자수 체크 event */\r\n    onKeyDown: function (e) {\r\n      if (e.target.textLength > 1000) {\r\n        alert('글자수를 1000자 이하로 입력해주세요.')\r\n      }\r\n    },\r\n    enterEvent: function (e) {\r\n      // alert('!!!')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.border-red { background-color: #e53e3e }\r\n.inner-select {width:100%; min-width:auto !important; padding:5px !important; margin-right:0 !important}\r\n</style>\r\n"]}]}