{"remainingRequest":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\00_WORK\\workspace\\vue_frontend\\src\\views\\vcode\\CalendarView.vue?vue&type=style&index=0&id=62483a69&lang=postcss&scoped=true&","dependencies":[{"path":"C:\\00_WORK\\workspace\\vue_frontend\\src\\views\\vcode\\CalendarView.vue","mtime":1593752266790},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KL2RlZXAvIC5jdXN0b20tY2FsZW5kYXIgOjotd2Via2l0LXNjcm9sbGJhciB7d2lkdGg6IDBweH0NCi9kZWVwLyAuY3VzdG9tLWNhbGVuZGFyIDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge2Rpc3BsYXk6IG5vbmU7fQ0KL2RlZXAvIC5jdXN0b20tY2FsZW5kYXIge3dpZHRoOjEwMCU7IGJvcmRlci1yYWRpdXM6MH0NCi9kZWVwLyAuY3VzdG9tLWNhbGVuZGFyLnZjLWNvbnRhaW5lciB7fQ0KL2RlZXAvIC5jdXN0b20tY2FsZW5kYXIudmMtY29udGFpbmVyIC52Yy1oZWFkZXIge2JvcmRlcjowOyBwYWRkaW5nOjEwcHg7IGJhY2tncm91bmQtY29sb3I6I2UyZThmMH0NCi9kZWVwLyAuY3VzdG9tLWNhbGVuZGFyLnZjLWNvbnRhaW5lciAudmMtd2Vla3Mge3BhZGRpbmc6MH0NCi9kZWVwLyAuY3VzdG9tLWNhbGVuZGFyLnZjLWNvbnRhaW5lciAudmMtd2Vla2RheSB7cGFkZGluZzoxMHB4IDA7IGJvcmRlci10b3A6MXB4IHNvbGlkICNkZGQ7IGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGQ7IGJhY2tncm91bmQtY29sb3I6I2Y3ZjdmNzsgY29sb3I6IzY2Nn0NCi9kZWVwLyAuY3VzdG9tLWNhbGVuZGFyLnZjLWNvbnRhaW5lciAudmMtZGF5IHtoZWlnaHQ6OTBweDsgcGFkZGluZzo1cHg7IGJvcmRlcjoxcHggc29saWQgI2RkZDsgYm9yZGVyLWxlZnQ6MDsgYm9yZGVyLXRvcDowO30NCi9kZWVwLyAuY3VzdG9tLWNhbGVuZGFyLnZjLWNvbnRhaW5lciAudmMtZGF5LndlZWtkYXktMSB7YmFja2dyb3VuZC1jb2xvcjpmOyBjb2xvcjojZTUzZTNlfQ0KL2RlZXAvIC5jdXN0b20tY2FsZW5kYXIudmMtY29udGFpbmVyIC52Yy1kYXkud2Vla2RheS03IHtiYWNrZ3JvdW5kLWNvbG9yOiAjICNlZmY4ZmVmZjhmZjsgYm9yZGVyLXJpZ2h0OjA7IGNvbG9yOiNlNTNlM2V9DQovZGVlcC8gLmN1c3RvbS1jYWxlbmRhci52Yy1jb250YWluZXIgLnZjLWRheS1kb3RzIHt9DQovZGVlcC8gLmN1c3RvbS1jYWxlbmRhci52Yy1jb250YWluZXIgLnZjLWJnLWJsdWUtMTAwIHtiYWNrZ3JvdW5kLWNvbG9yOiMyRDM3NDg7IG91dGxpbmU6bm9uZX0NCi52Yy1ncmlkLWNlbGwge2JhY2tncm91bmQtY29sb3I6IzRhNTU2OCAhaW1wb3J0YW50fQ0K"},{"version":3,"sources":["CalendarView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CalendarView.vue","sourceRoot":"src/views/vcode","sourcesContent":["<template>\r\n  <div class=\"conts-area\">\r\n    <div class=\"conts-tit\">\r\n      <h2>캘린더 관리</h2>\r\n    </div>\r\n    <div class=\"list-top-area\">\r\n    <div class=\"fl\">\r\n        <label for=\"s1\">년도</label>\r\n        <select id=\"s1\" title=\"select\"  @change=\"onChangeYear($event)\">\r\n          <option v-for=\"Y in callYears\" v-bind:key=\"Y.year\" v-bind:value=\"Y\">{{Y}}</option>\r\n        </select>\r\n        <label for=\"s2\">월</label>\r\n        <select id=\"s2\" title=\"select\" @change=\"onChangeMonth($event)\">\r\n          <option value=\"1\">01</option>\r\n          <option value=\"2\">02</option>\r\n          <option value=\"3\">03</option>\r\n          <option value=\"4\">04</option>\r\n          <option value=\"5\">05</option>\r\n          <option value=\"6\">06</option>\r\n          <option value=\"7\">07</option>\r\n          <option value=\"8\">08</option>\r\n          <option value=\"9\">09</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"11\">11</option>\r\n          <option value=\"12\">12</option>\r\n        </select>\r\n    </div>\r\n      <div class=\"fr\">\r\n        <button type=\"button\" title=\"캘린더 생성\" v-on:click=\"newCalendar()\" class=\"btn btn-blue\">캘린더 생성</button>\r\n        <newCalendarPop :visible.sync=\"visible\">\r\n        </newCalendarPop>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"color-sample\">\r\n      컬러 관련 sample\r\n      <ul>\r\n        <li><span class=\"c-box bg-red\">공휴일/class: bg-red</span></li>\r\n      </ul>\r\n    </div> -->\r\n    <v-calendar\r\n      class=\"custom-calendar mt30\"\r\n      :masks=\"masks\"\r\n      :attributes=\"attributes\"\r\n      disable-page-swipe\r\n      nav-visibility=\"hidden\"\r\n      ref=\"calendar\"\r\n    >\r\n      <div\r\n        slot=\"day-content\"\r\n        slot-scope=\"{ day, attributes }\"\r\n        class=\"flex\"\r\n        v-on:click=\"registerModal(day.day)\"\r\n      >\r\n        <span>{{ day.day }}</span> <!-- Day -->\r\n        <div class=\"flex-grow\">\r\n          <p v-for=\"attr in attributes\" class=\"day-plan\" :class=\"attr.customData.class\" v-bind:key=\"attr.dkey\">\r\n            {{ attr.customData.title }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </v-calendar>\r\n\r\n  <!-- Modal start -->\r\n  <MyModal v-if=\"modalVisible\">\r\n      <template slot=\"header\">\r\n        법정공휴일 등록\r\n      </template>\r\n      <!-- default 슬롯 콘텐츠 -->\r\n      <div class=\"tbl-area\">\r\n        <table class=\"tbl tb-detail mt10\">\r\n          <caption>디테일 테이블</caption>\r\n          <colgroup>\r\n            <col style=\"width:30%\">\r\n            <col style=\"width:70%\">\r\n          </colgroup>\r\n          <tbody>\r\n            <tr>\r\n              <th>공휴일 등록 일자</th>\r\n              <td class=\"t-left\">\r\n                {{ modalData.date.substring(0,4) }}년  {{ modalData.date.substring(4,6) }}월  {{ modalData.date.substring(6,8) }}일\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>공휴일 유형</th>\r\n              <td class=\"t-left\">\r\n                <select id=\"s1\" title=\"select\" class=\"wp100\" v-model=\"sHoliday\" @change=\"onChangeHolidayOption($event)\">\r\n                  <option v-for=\"hDay in holidayList\" v-bind:key=\"hDay.scode\" v-bind:value=\"hDay.scode\" > {{ hDay.scodeNm }} </option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <!-- <th colspan=\"2\">해당일을 공휴일로 지정하시겠습니까?</th> -->\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <!-- /default -->\r\n      <!-- footer 슬롯 콘텐츠 -->\r\n      <template slot=\"footer\">\r\n        <div class=\"t-center\">\r\n          <button type=\"button\" class=\"btn btn-blue\" v-on:click=\"saveNewHoliday(modalData, holydayOption)\" >저장</button>\r\n          <button type=\"button\" class=\"btn btn-gray\" v-on:click='modalVisible=false'>취소</button>\r\n        </div>\r\n      </template>\r\n      <!-- /footer -->\r\n    </MyModal>\r\n    <!-- modal end -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios'\r\nimport newCalendarPop from '../popup/newCalendar.vue' /* 캘린터 생성 팝업 컴포넌트 */\r\nimport MyModal from '../../components/MyModal.vue' /* 법정공휴일 등록 모달 컴포넌트 */\r\n// import addHoliday from '../popup/addHoliday.vue' /* 법정공휴일 등록 팝업 컴포넌트 */\r\n\r\nexport default {\r\n  name: 'CalendarView',\r\n  data () {\r\n    return {\r\n      masks: {\r\n        weekdays: 'WWW'\r\n      },\r\n      attributes: [],\r\n      visible: false,\r\n      yymmddTitle: '',\r\n      callYears: [],\r\n      selectedYear: '',\r\n      selectedMonth: '',\r\n      selectedDay: '',\r\n      modalVisible: false,\r\n      modalData: {\r\n        dates: '',\r\n        holydayOption: ''\r\n      },\r\n      holidayList: '',\r\n      sHoliday: ''\r\n    }\r\n  },\r\n  created () {\r\n    this.getHolidayList()\r\n  },\r\n  components: {\r\n    newCalendarPop: newCalendarPop, /* 캘린터 생성 팝업 컴포넌트 */\r\n    MyModal /* 법정공휴일 등록 모달 컴포넌트 */\r\n    // addHoliday: addHoliday /* 법정공휴일 등록 팝업 컴포넌트 */\r\n  },\r\n  mounted () {\r\n    var calPreAndNextBtn = document.querySelectorAll('.vc-svg-icon')\r\n    calPreAndNextBtn[0].addEventListener('click', this.selectPreCalendarElement, false)\r\n    calPreAndNextBtn[1].addEventListener('click', this.selectNextCalendarElement, false)\r\n    this.getCalYears()\r\n    this.getCalendarYear()\r\n\r\n    const month = new Date().getMonth()\r\n    var sel = document.getElementById('s2')\r\n    sel[month].selected = true\r\n  },\r\n  methods: {\r\n    getHolidayList: function () { /* 공휴일 목록 조회 */\r\n      axios.get('/api/calendar/selectHolidayList')\r\n        .then(res => {\r\n          this.holidayList = res.data.data\r\n          this.sHoliday = this.holidayList[0].scode\r\n          this.holydayOption = '1'\r\n        })\r\n        .catch((ex) => {\r\n          console.log('ERROR!! => ' + ex)\r\n        })\r\n    },\r\n    registerModal (day) { /* 특정 셀을 클릭시 이벤트 */\r\n      /* 페이지의 년도와 개월수 값 - 콤보박스에서 가져오기 */\r\n      this.selectedYear = document.getElementById('s1').value\r\n      if (Number(document.getElementById('s2').value) < '10') {\r\n        this.selectedMonth = '0' + document.getElementById('s2').value\r\n      } else {\r\n        this.selectedMonth = document.getElementById('s2').value\r\n      }\r\n      if (day < 10) { /* 클릭한 셀의 텍스트 가져오기 */\r\n        this.selectedDay = '0' + day\r\n      } else {\r\n        this.selectedDay = day\r\n      }\r\n      this.modalData.date = document.getElementById('s1').value + this.selectedMonth + this.selectedDay\r\n      this.modalVisible = true\r\n    },\r\n    onChangeHolidayOption ($event) { /* 모달 내부의 onChange */\r\n      this.holydayOption = event.target.value\r\n      console.log(event.target.value)\r\n    },\r\n    saveNewHoliday (modalData, holydayOption) { /* 모달창에서 법정공휴일 추가 저장 */\r\n      axios\r\n        .get('/api/calendar/registHoliday', {\r\n          params: {\r\n            strDate: this.modalData.date,\r\n            holiday: this.holydayOption\r\n          }\r\n        })\r\n        .then(res => {\r\n          alert(res.data.message)\r\n          this.modalVisible = false /* 저장 완료 후, 콘솔 종료 및 캘린더 리프레시 */\r\n          location.reload()\r\n          // this.$router.reload()\r\n        })\r\n        .catch((ex) => {\r\n          console.log('Error!!!! : ' + ex)\r\n        })\r\n    },\r\n    onChangeMonth (event) { // 캘린더 달 바뀔 시\r\n      this.selectedYear = document.getElementById('s1').value\r\n      this.selectdMonth = document.getElementById('s2').value\r\n      var paramDate = this.selectdMonth + '월' + this.selectedYear\r\n      const calendar = this.$refs.calendar\r\n      calendar.move(new Date(this.selectedYear, this.selectdMonth - 1, 1))\r\n      axios\r\n        .get('/api/calendar/selectCalYearsList', {\r\n          params: { strDate: paramDate },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (var i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].years, res.data.data[i].months, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n\r\n            const ddd = this.selectdMonth + '월 ' + this.selectedYear\r\n            this.yymmddTitle = ddd\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    onChangeYear (event) { // 캘린더 년도 바뀔 시\r\n      this.selectedYear = event.target.value\r\n      this.selectdMonth = document.getElementById('s2').value\r\n      var paramDate = this.selectdMonth + '월' + this.selectedYear\r\n      const calendar = this.$refs.calendar\r\n      calendar.move(new Date(this.selectedYear, this.selectdMonth - 1, 1))\r\n      axios\r\n        .get('/api/calendar/selectCalYearsList', {\r\n          params: { strDate: paramDate },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (var i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].years, res.data.data[i].months, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n\r\n            const ddd = this.selectdMonth + '월 ' + this.selectedYear\r\n            this.yymmddTitle = ddd\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    getCalendarYear: function () { // 캘린더 년도 정보 가져오기\r\n      this.callYears.splice(0)\r\n      axios\r\n        .get('/api/vacation/selectCalendarYear')\r\n        .then(res => {\r\n          const year = new Date().getFullYear()\r\n          for (const i in res.data.data) {\r\n            this.callYears.push(res.data.data[i].year)\r\n            if (String(year) === String(this.callYears[i])) {\r\n              this.callYears.splice(i, 1)\r\n            }\r\n          }\r\n          this.callYears.sort()\r\n          this.callYears.unshift(String(year))\r\n          if (this.callYears[0] !== '') {\r\n            this.selectedYear = this.callYears[0]\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    /* 초기 조회 함수(현제!!!!! 날짜) */\r\n    getCalYears: function () {\r\n      /* params set */\r\n      const titleText = document.getElementsByClassName('vc-title')[0].innerHTML\r\n      // const zz = titleText.split('월')\r\n      // const tas = ''\r\n      // const ddd = tas.concat(Number(zz[0]) - 1, '월', zz[1])\r\n      this.yymmddTitle = titleText\r\n      axios.get('/api/calendar/selectCalYearsList', {\r\n        params: { strDate: this.yymmddTitle },\r\n        headers: { 'X-Api-Key': 'my-api-key' }\r\n      })\r\n        .then(res => {\r\n          const month = new Date().getMonth()\r\n          const year = new Date().getFullYear()\r\n          for (const v in res.data.data) {\r\n            // console.log('month :: ' + month)\r\n            // console.log('year :: ' + year)\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[v].customData.title = res.data.data[v].title\r\n            this.attributes[v].dates = new Date(year, month, res.data.data[v].dkey)\r\n            this.attributes[v].key = res.data.data[v].dkey\r\n            this.attributes[v].customData.class = res.data.data[v].tempClass\r\n            obj = null\r\n          }\r\n        })\r\n        .catch((ex) => {\r\n          console.log('Error!!!! : ' + ex)\r\n        })\r\n    },\r\n    selectPreCalendarElement: function () { // 유저의 근태정보 조회(이전 달)\r\n      const titleText = document.getElementsByClassName('vc-title')[0].innerHTML\r\n      var splitTitleText = titleText.split('월')\r\n      var tempTitle = ''\r\n      var selMonth = document.getElementById('s2')\r\n      if (splitTitleText[0] === '1') { // 금년도 1월 -> 전년도 12월 파라미터 설정\r\n        var finalTitle = tempTitle.concat(12, '월', Number(splitTitleText[1]) - 1)\r\n        if (this.callYears.includes(String(Number(splitTitleText[1]) - 1)) === false) { // 캘린더 데이터에 존재하지 않는 년도 일 때\r\n          alert('캘린더에는' + '  ' + this.selectedYear + '년 전의 년도는 저장되어 있지 않습니다.')\r\n          document.getElementById('s1').value = Number(splitTitleText[1])\r\n          selMonth[0].selected = true\r\n          const calendar = this.$refs.calendar\r\n          calendar.move(new Date(this.selectedYear, 1, 1))\r\n        } else {\r\n          document.getElementById('s1').value = Number(splitTitleText[1]) - 1// 년도 수정해주기\r\n          selMonth[11].selected = true\r\n        }\r\n      } else {\r\n        finalTitle = tempTitle.concat(Number(splitTitleText[0]) - 1, '월', splitTitleText[1])\r\n        selMonth[splitTitleText[0] - 2].selected = true\r\n      }\r\n      this.yymmddTitle = finalTitle\r\n      axios\r\n        .get('/api/calendar/selectCalYearsList', {\r\n          params: { strDate: this.yymmddTitle },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (const i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].year, res.data.data[i].month, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    selectNextCalendarElement: function () { // 유저의 근태정보 조회(다음 달)\r\n      const titleText = document.getElementsByClassName('vc-title')[0].innerHTML\r\n      var splitTitleText = titleText.split('월')\r\n      var tempTitle = ''\r\n      var selMonth = document.getElementById('s2')\r\n      this.temp = Number(this.temp) + 1\r\n      if (splitTitleText[0] === '12') { // 금년도 12월 -> 후년도 12월 파라미터 설정\r\n        var finalTitle = tempTitle.concat(1, '월', Number(splitTitleText[1]) + 1)\r\n        selMonth[0].selected = true\r\n        document.getElementById('s1').value = Number(splitTitleText[1]) + 1 // 년도 수정해주기\r\n      } else {\r\n        finalTitle = tempTitle.concat(Number(splitTitleText[0]) + 1, '월', splitTitleText[1])\r\n        selMonth[splitTitleText[0]].selected = true\r\n      }\r\n      this.yymmddTitle = finalTitle\r\n      axios\r\n        .get('/api/calendar/selectCalYearsList', {\r\n          params: { strDate: this.yymmddTitle },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (const i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].years, res.data.data[i].months, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    /* 캘린더 생성 팝업 호출 */\r\n    newCalendar: function () {\r\n      this.visible = !this.visible\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"postcss\" scoped>\r\n/deep/ .custom-calendar ::-webkit-scrollbar {width: 0px}\r\n/deep/ .custom-calendar ::-webkit-scrollbar-track {display: none;}\r\n/deep/ .custom-calendar {width:100%; border-radius:0}\r\n/deep/ .custom-calendar.vc-container {}\r\n/deep/ .custom-calendar.vc-container .vc-header {border:0; padding:10px; background-color:#e2e8f0}\r\n/deep/ .custom-calendar.vc-container .vc-weeks {padding:0}\r\n/deep/ .custom-calendar.vc-container .vc-weekday {padding:10px 0; border-top:1px solid #ddd; border-bottom:1px solid #ddd; background-color:#f7f7f7; color:#666}\r\n/deep/ .custom-calendar.vc-container .vc-day {height:90px; padding:5px; border:1px solid #ddd; border-left:0; border-top:0;}\r\n/deep/ .custom-calendar.vc-container .vc-day.weekday-1 {background-color:f; color:#e53e3e}\r\n/deep/ .custom-calendar.vc-container .vc-day.weekday-7 {background-color: # #eff8feff8ff; border-right:0; color:#e53e3e}\r\n/deep/ .custom-calendar.vc-container .vc-day-dots {}\r\n/deep/ .custom-calendar.vc-container .vc-bg-blue-100 {background-color:#2D3748; outline:none}\r\n.vc-grid-cell {background-color:#4a5568 !important}\r\n</style>\r\n"]}]}