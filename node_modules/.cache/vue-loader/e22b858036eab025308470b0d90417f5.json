{"remainingRequest":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\00_WORK\\workspace\\vue_frontend\\src\\views\\gostop\\MonthGostopView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\00_WORK\\workspace\\vue_frontend\\src\\views\\gostop\\MonthGostopView.vue","mtime":1594355441134},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MonthGostopView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MonthGostopView.vue","sourceRoot":"src/views/gostop","sourcesContent":["<template>\r\n  <div class=\"conts-area\">\r\n    <div class=\"conts-tit\">\r\n      <h2>월별 근태 조회</h2>\r\n    </div>\r\n    <div class=\"list-top-area\">\r\n    <div class=\"fl\">\r\n        <label for=\"s1\">년도</label>\r\n        <select id=\"s1\" title=\"select\"  @change=\"onChangeYear($event)\">\r\n          <option v-for=\"Y in callYears\" v-bind:key=\"Y.year\" v-bind:value=\"Y\">{{Y}}</option>\r\n        </select>\r\n        <label for=\"s2\">월</label>\r\n        <select id=\"s2\" title=\"select\" @change=\"onChangeMonth($event)\">\r\n          <option value=\"1\">01</option>\r\n          <option value=\"2\">02</option>\r\n          <option value=\"3\">03</option>\r\n          <option value=\"4\">04</option>\r\n          <option value=\"5\">05</option>\r\n          <option value=\"6\">06</option>\r\n          <option value=\"7\">07</option>\r\n          <option value=\"8\">08</option>\r\n          <option value=\"9\">09</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"11\">11</option>\r\n          <option value=\"12\">12</option>\r\n        </select>\r\n    </div>\r\n    </div>\r\n    <v-calendar\r\n      class=\"custom-calendar mt30\"\r\n      :masks=\"masks\"\r\n      :attributes=\"attributes\"\r\n      disable-page-swipe\r\n      nav-visibility=\"hidden\"\r\n      ref=\"calendar\"\r\n    >\r\n      <div\r\n        slot=\"day-content\"\r\n        slot-scope=\"{ day, attributes }\"\r\n        class=\"flex\"\r\n      >\r\n        <span>{{ day.day }}</span>\r\n        <div class=\"flex-grow\">\r\n          <p v-for=\"attr in attributes\" :class=\"attr.customData.class\" v-bind:key=\"attr.dkey\">\r\n            {{ attr.customData.title }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </v-calendar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'DeptPlando',\r\n  data () {\r\n    return {\r\n      masks: {\r\n        weekdays: 'WW'\r\n      },\r\n      attributes: [],\r\n      yymmddTitle: '',\r\n      callYears: [],\r\n      selectedYear: '',\r\n      selectedMonth: ''\r\n    }\r\n  },\r\n  mounted: function () {\r\n    var calPreAndNextBtn = document.querySelectorAll('.vc-svg-icon')\r\n    calPreAndNextBtn[0].addEventListener('click', this.selectPreCalendarElement, false)\r\n    calPreAndNextBtn[1].addEventListener('click', this.selectNextCalendarElement, false)\r\n    this.selectCalendarElement()\r\n    this.getCalendarYear()\r\n\r\n    // 셀렉트 박스 초기값 현재 달로 설정\r\n    const month = new Date().getMonth()\r\n    var sel = document.getElementById('s2')\r\n    sel[month].selected = true\r\n  },\r\n  methods: {\r\n    onChangeMonth (event) { // 캘린더 달 바뀔 시\r\n      this.selectedYear = document.getElementById('s1').value\r\n      this.selectdMonth = document.getElementById('s2').value\r\n      var paramDate = this.selectdMonth + '월' + this.selectedYear\r\n      const calendar = this.$refs.calendar\r\n      calendar.move(new Date(this.selectedYear, this.selectdMonth - 1, 1))\r\n      axios\r\n        .get('/api/vacation/selectCalendarElement', {\r\n          params: { strDate: paramDate },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (const i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].year, res.data.data[i].month, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n          }\r\n        })\r\n    },\r\n    onChangeYear (event) { // 캘린더 년도 바뀔 시\r\n      this.selectedYear = event.target.value\r\n      this.selectdMonth = document.getElementById('s2').value\r\n      var paramDate = this.selectdMonth + '월' + this.selectedYear\r\n      const calendar = this.$refs.calendar\r\n      calendar.move(new Date(this.selectedYear, this.selectdMonth - 1, 1))\r\n      axios\r\n        .get('/api/vacation/selectCalendarElement', {\r\n          params: { strDate: paramDate },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (const i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].year, res.data.data[i].month, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n          }\r\n        })\r\n    },\r\n    getCalendarYear: function () { // 캘린더 년도 정보 가져오기\r\n      axios\r\n        .get('/api/vacation/selectCalendarYear')\r\n        .then(res => {\r\n          const year = new Date().getFullYear()\r\n          for (const i in res.data.data) {\r\n            this.callYears.push(res.data.data[i].year)\r\n            if (String(year) === String(this.callYears[i])) {\r\n              this.callYears.splice(i, 1)\r\n            }\r\n          }\r\n          this.callYears.sort()\r\n          this.callYears.unshift(String(year))\r\n          if (this.callYears[0] !== '') {\r\n            this.selectedYear = this.callYears[0]\r\n          }\r\n        })\r\n    },\r\n    selectCalendarElement: function () { // 유저의 근태정보 조회(최초 load시)\r\n      const titleText = document.getElementsByClassName('vc-title')[0].innerHTML\r\n      this.yymmddTitle = titleText\r\n      axios\r\n        .get('/api/vacation/selectCalendarElement', {\r\n          params: { strDate: this.yymmddTitle },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (const i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].year, res.data.data[i].month, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n          }\r\n        })\r\n    },\r\n    selectPreCalendarElement: function () { // 유저의 근태정보 조회(이전 달)\r\n      const titleText = document.getElementsByClassName('vc-title')[0].innerHTML\r\n      var splitTitleText = titleText.split('월')\r\n      var tempTitle = ''\r\n      var selMonth = document.getElementById('s2')\r\n      if (splitTitleText[0] === '1') { // 금년도 1월 -> 전년도 12월 파라미터 설정\r\n        var finalTitle = tempTitle.concat(12, '월', Number(splitTitleText[1]) - 1)\r\n        if (this.callYears.includes(String(Number(splitTitleText[1]) - 1)) === false) { // 캘린더 데이터에 존재하지 않는 년도 일 때\r\n          alert('캘린더에는' + '  ' + this.selectedYear + '년 전의 년도는 저장되어 있지 않습니다.')\r\n          document.getElementById('s1').value = Number(splitTitleText[1])\r\n          selMonth[0].selected = true\r\n          const calendar = this.$refs.calendar\r\n          calendar.move(new Date(this.selectedYear, 1, 1))\r\n        } else {\r\n          document.getElementById('s1').value = Number(splitTitleText[1]) - 1// 년도 수정해주기\r\n          selMonth[11].selected = true\r\n        }\r\n      } else {\r\n        finalTitle = tempTitle.concat(Number(splitTitleText[0]) - 1, '월', splitTitleText[1])\r\n        selMonth[splitTitleText[0] - 2].selected = true\r\n      }\r\n      this.yymmddTitle = finalTitle\r\n      axios\r\n        .get('/api/vacation/selectCalendarElement', {\r\n          params: { strDate: this.yymmddTitle },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (const i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].year, res.data.data[i].month, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n          }\r\n        })\r\n    },\r\n    selectNextCalendarElement: function () { // 유저의 근태정보 조회(다음 달)\r\n      const titleText = document.getElementsByClassName('vc-title')[0].innerHTML\r\n      var splitTitleText = titleText.split('월')\r\n      var tempTitle = ''\r\n      var selMonth = document.getElementById('s2')\r\n      this.temp = Number(this.temp) + 1\r\n      if (splitTitleText[0] === '12') { // 금년도 12월 -> 후년도 12월 파라미터 설정\r\n        var finalTitle = tempTitle.concat(1, '월', Number(splitTitleText[1]) + 1)\r\n        selMonth[0].selected = true\r\n        document.getElementById('s1').value = Number(splitTitleText[1]) + 1 // 년도 수정해주기\r\n      } else {\r\n        finalTitle = tempTitle.concat(Number(splitTitleText[0]) + 1, '월', splitTitleText[1])\r\n        selMonth[splitTitleText[0]].selected = true\r\n      }\r\n      this.yymmddTitle = finalTitle\r\n      axios\r\n        .get('/api/vacation/selectCalendarElement', {\r\n          params: { strDate: this.yymmddTitle },\r\n          headers: { 'X-Api-Key': 'my-api-key' }\r\n        })\r\n        .then(res => {\r\n          for (const i in res.data.data) {\r\n            var obj = {\r\n              dkey: '',\r\n              customData: {\r\n                title: '',\r\n                class: ''\r\n              },\r\n              dates: null\r\n            }\r\n            this.attributes.push(obj)\r\n            this.attributes[i].customData.title = res.data.data[i].title\r\n            this.attributes[i].dates = new Date(res.data.data[i].year, res.data.data[i].month, res.data.data[i].dkey)\r\n            this.attributes[i].dkey = res.data.data[i].dkey\r\n            this.attributes[i].customData.class = res.data.data[i].tempClass\r\n            obj = null\r\n          }\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"postcss\" scoped>\r\n/deep/ .custom-calendar ::-webkit-scrollbar {width: 0px}\r\n/deep/ .custom-calendar ::-webkit-scrollbar-track {display: none}\r\n/deep/ .custom-calendar {width:100%; border-radius:0}\r\n/deep/ .custom-calendar.vc-container {}\r\n/deep/ .custom-calendar.vc-container .vc-header {border:0; padding:10px; background-color:#e2e8f0}\r\n/deep/ .custom-calendar.vc-container .vc-weeks {padding:0}\r\n/deep/ .custom-calendar.vc-container .vc-weekday {padding:10px 0; border-top:1px solid #ddd; border-bottom:1px solid #ddd; background-color:#f7f7f7; color:#666}\r\n/deep/ .custom-calendar.vc-container .vc-day {height:90px; padding:5px; border:1px solid #ddd; border-left:0; border-top:0;}\r\n/deep/ .custom-calendar.vc-container .vc-day.weekday-1 {background-color: #eff8ff; color:#e53e3e}\r\n/deep/ .custom-calendar.vc-container .vc-day.weekday-7 {background-color: #eff8ff; border-right:0; color:blue}\r\n/deep/ .custom-calendar.vc-container .vc-day-dots {}\r\n/deep/ .custom-calendar.vc-container .vc-bg-blue-100 {background-color:#2D3748; outline:none}\r\n.vc-grid-cell {background-color:#4a5568 !important}\r\n</style>\r\n"]}]}