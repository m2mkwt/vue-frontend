{"remainingRequest":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\00_WORK\\workspace\\vue_frontend\\src\\views\\vcode\\CommonCode.vue?vue&type=template&id=135736de&","dependencies":[{"path":"C:\\00_WORK\\workspace\\vue_frontend\\src\\views\\vcode\\CommonCode.vue","mtime":1593752266791},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\00_WORK\\workspace\\vue_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}